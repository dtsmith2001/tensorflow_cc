# docker build -t vallumdev/development:tensorflow_cc_prep -f Dockerfiles/ubuntu-shared .
# docker build -t vallumdev/development:tensorflow_cc -f Dockerfiles/ubuntu-shared .

NOTE This dockerfile is not complete. the tensorflow lite builds are not documented yet

FROM vallumdev/development:tensorflow_cc_prep

ARG DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-c"]

ARG cuda=false
ARG shared=true
#ARG tensorflow_tag=v2.1.0-rc1
ARG tensorflow_tag=v1.15.0

# copy the contents of this repository to the container
COPY . tensorflow_cc

# alternatively, clone the repository
# RUN git clone https://github.com/FloopCZ/tensorflow_cc.git

RUN [ "$cuda" = "true" ] && apt-get -y install cuda-command-line-tools-10-1 || echo "libcupti will not be installed"

RUN rm -fr /tensorflow_cc/tensorflow_cc/build && mkdir /tensorflow_cc/tensorflow_cc/build

WORKDIR /tensorflow_cc/tensorflow_cc/build

RUN [ "$shared" = "true" ] && \
	cmake -DTENSORFLOW_STATIC=OFF -DTENSORFLOW_SHARED=ON -DTENSORFLOW_TAG=${tensorflow_tag} .. || \
	cmake -DTENSORFLOW_TAG=${tensorflow_tag} ..

RUN make

WORKDIR /tensorflow_cc/tensorflow_cc/build/tensorflow

RUN tensorflow/lite/tools/make/download_dependencies.sh

RUN tensorflow/lite/tools/make/build_rpi_lib.sh

RUN make -f tensorflow/lite/tools/make/Makefile TARGET=rpi TARGET_ARCH=armv7l
RUN make -f tensorflow/lite/tools/make/Makefile TARGET=arm_axis TARGET_ARCH=armv7l

RUN ls -l tensorflow/tensorflow/lite/tools/make/gen/*_armv7l/lib/libtensorflow-lite.a

# RUN tar czf tensorflow_cc.tgz 

#COPY tensorflow_cc.tgz .
